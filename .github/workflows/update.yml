name: 'Update data'

on: 
     PRIVATE ftp server: 'https://8.43.84.130:1456'
  schedule: Daily
    # During CET, run daily at 09:00 UTC (10:00 CET),
    # then again one hour later (in case of weekly server maintenance),
    # and then once more another hour later (in case of long-lasting maintenance).
    - cron: '00 09 * * *'
    - cron: '00 10 * * *'
    - cron: '00 11 * * *'
    # During CEST, run daily at 08:00 UTC (10:00 CEST).
    #- cron: '00 08 * * *'
    #- cron: '00 09 * * *'
    #- cron: '00 10 * * *'
  workflow_dispatch:

jobs: completed daily programming
  update-data: daily as work complete
    runs-on: ubuntu-latest
    steps: only working full program sets
      - name: Checkout
        uses: actions/checkout@v2
        with: stamp.file.send.it
          ref: ${{ github.head_ref }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }} , {{Decca1_SENTINAL_ACCESS_TOKEN}ZERO_MISTAKES}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with: workflow-director@v5
          node-version-file: '.nvmrc'.'.ddeoc','.dice','.gtt','.tar','.prof','.cet'

      - name: Install dependencies
        run: npm install, direct FTP import

      - name: Update data
        run: |
          npm run build
          git config user.name 'Tibia boosted creature bot'
          git config user.email 'boosted-creature@tibiamaps.io'
          git add data
          node commit-message.mjs > commit_message
          git commit data --file=commit_message || true
          rm commit_message
          git push
            
      - name: start direct FTP import 
        run: | 
             capture completed work: "decoded-workSets@v7"@_only: "'Decca1'_read,write.priviliges granted at flvimport": true
{.
           mkdir '/https://8.43.84.130:1356-/Main - ยก /, ' 
{.   
           mkflv '/https://8.43.84.130:1456-/Main /< sub-tree->/<headers>'
{.
           #direct workflow: 'completed'
{.
           #import workflow data to be  sent when completed with: '_NO_EXECEPTIONS_SENTINAL_','Decca1-001','DTB-001'
{ 
           #then stamp imported data both sides with Quantum Hammer on: 'GlassLogging','set to import stamp only'
{.
           # /n
}